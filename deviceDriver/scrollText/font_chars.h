#ifndef FONT_CHARS_H
#define FONT_CHARS_H

#include <linux/types.h>

// ✅ Font 8x8 ROTATED 90 DEGREES - để fix orientation
const uint8_t font_8x8[][8] = {
    // A (index 0) - rotated 90°
    {0x00, 0x66, 0x66, 0x7E, 0x66, 0x66, 0x3C, 0x00},
    // B (index 1) - rotated 90°
    {0x00, 0x7C, 0x66, 0x66, 0x7C, 0x66, 0x66, 0x7C},
    // C (index 2) - rotated 90°
    {0x00, 0x3C, 0x66, 0x60, 0x60, 0x60, 0x66, 0x3C},
    // D (index 3) - rotated 90°
    {0x00, 0x78, 0x6C, 0x66, 0x66, 0x66, 0x6C, 0x78},
    // E (index 4) - rotated 90°
    {0x00, 0x7E, 0x60, 0x60, 0x78, 0x60, 0x60, 0x7E},
    // F (index 5) - rotated 90°
    {0x00, 0x60, 0x60, 0x60, 0x78, 0x60, 0x60, 0x7E},
    // G (index 6) - rotated 90°
    {0x00, 0x3C, 0x66, 0x66, 0x6E, 0x60, 0x66, 0x3C},
    // H (index 7) - rotated 90°
    {0x00, 0x66, 0x66, 0x66, 0x7E, 0x66, 0x66, 0x66},
    // I (index 8) - rotated 90°
    {0x00, 0x3C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C},
    // J (index 9) - rotated 90°
    {0x00, 0x38, 0x6C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E},
    // K (index 10) - rotated 90°
    {0x00, 0x66, 0x6C, 0x78, 0x70, 0x78, 0x6C, 0x66},
    // L (index 11) - rotated 90°
    {0x00, 0x7E, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60},
    // M (index 12) - rotated 90°
    {0x00, 0x63, 0x63, 0x63, 0x6B, 0x7F, 0x77, 0x63},
    // N (index 13) - rotated 90°
    {0x00, 0x66, 0x66, 0x6E, 0x7E, 0x7E, 0x76, 0x66},
    // O (index 14) - rotated 90°
    {0x00, 0x3C, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3C},
    // P (index 15) - rotated 90°
    {0x00, 0x60, 0x60, 0x60, 0x7C, 0x66, 0x66, 0x7C},
    // Q (index 16) - rotated 90°
    {0x00, 0x0E, 0x3C, 0x66, 0x66, 0x66, 0x66, 0x3C},
    // R (index 17) - rotated 90°
    {0x00, 0x66, 0x6C, 0x78, 0x7C, 0x66, 0x66, 0x7C},
    // S (index 18) - rotated 90°
    {0x00, 0x3C, 0x66, 0x06, 0x3C, 0x60, 0x66, 0x3C},
    // T (index 19) - rotated 90°
    {0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7E},
    // U (index 20) - rotated 90°
    {0x00, 0x3C, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66},
    // V (index 21) - rotated 90°
    {0x00, 0x18, 0x3C, 0x66, 0x66, 0x66, 0x66, 0x66},
    // W (index 22) - rotated 90°
    {0x00, 0x63, 0x77, 0x7F, 0x6B, 0x63, 0x63, 0x63},
    // X (index 23) - rotated 90°
    {0x00, 0x66, 0x66, 0x3C, 0x18, 0x3C, 0x66, 0x66},
    // Y (index 24) - rotated 90°
    {0x00, 0x18, 0x18, 0x18, 0x3C, 0x66, 0x66, 0x66},
    // Z (index 25) - rotated 90°
    {0x00, 0x7E, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x7E},

    // Số 0-9 (index 26-35) - rotated 90°
    // 0 (index 26)
    {0x00, 0x3C, 0x66, 0x66, 0x76, 0x6E, 0x66, 0x3C},
    // 1 (index 27)
    {0x00, 0x7E, 0x18, 0x18, 0x18, 0x38, 0x18, 0x18},
    // 2 (index 28)
    {0x00, 0x7E, 0x60, 0x30, 0x0C, 0x06, 0x66, 0x3C},
    // 3 (index 29)
    {0x00, 0x3C, 0x66, 0x06, 0x1C, 0x06, 0x66, 0x3C},
    // 4 (index 30)
    {0x00, 0x06, 0x06, 0x7F, 0x66, 0x1E, 0x0E, 0x06},
    // 5 (index 31)
    {0x00, 0x3C, 0x66, 0x06, 0x06, 0x7C, 0x60, 0x7E},
    // 6 (index 32)
    {0x00, 0x3C, 0x66, 0x66, 0x7C, 0x60, 0x66, 0x3C},
    // 7 (index 33)
    {0x00, 0x18, 0x18, 0x18, 0x18, 0x0C, 0x66, 0x7E},
    // 8 (index 34)
    {0x00, 0x3C, 0x66, 0x66, 0x3C, 0x66, 0x66, 0x3C},
    // 9 (index 35)
    {0x00, 0x3C, 0x66, 0x06, 0x3E, 0x66, 0x66, 0x3C},

    // Ký tự đặc biệt - rotated 90°
    // Space (index 36)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
    // , (index 37)
    {0x00, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00},
    // . (index 38)
    {0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00},
    // : (index 39)
    {0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00},
};

// Hàm chuyển ký tự thành index font
int char_to_index(char c)
{
    if (c >= 'A' && c <= 'Z')
        return c - 'A';
    if (c >= 'a' && c <= 'z')
        return c - 'a'; // lowercase = uppercase
    if (c >= '0' && c <= '9')
        return c - '0' + 26;
    if (c == ' ')
        return 36;
    if (c == ',')
        return 37;
    if (c == '.')
        return 38;
    if (c == ':')
        return 39;
    return 36; // default space
}

#endif